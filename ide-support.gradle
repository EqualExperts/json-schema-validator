allprojects {
    apply plugin: 'idea'
}

//ideaModule.enabled = false
//ideaProject.subprojects.remove(project)

ideaProject {
    def vcsMappings = [svn: "svn info", hg4idea: "hg status", Git: "git status"]

    withXml { provider ->

        def vcs = vcsMappings.find {
            try {
                it.value.execute(null, rootProject.projectDir).waitFor() == 0
            } catch (Exception ignore) {
                return false
            }
        }
        if (vcs) {
            def vcsConfig = provider.asNode().component.find { it.'@name' == 'VcsDirectoryMappings' }
            vcsConfig.mapping[0].'@vcs' = vcs.key
        }
    }
}

ideaWorkspace {
    withXml { provider ->
        def runManagerComponent = provider.asNode().component.find { it.'@name' == 'RunManager'}
        def defaultJunitConfig = runManagerComponent.configuration.find {(it.'@default' == 'true') && (it.'@type' == 'JUnit')}
        def workingDirectoryOption = defaultJunitConfig.option.find {it.'@name' == 'WORKING_DIRECTORY'}
        workingDirectoryOption.'@value' = '$MODULE_DIR$'
    }
}